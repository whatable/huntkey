
默认构造器，Vue根实例var vm = new Vue({/*选项*/});
	选项:=数据data、模板、挂载元素el(ement)、方法watch、生命周期钩子等
	new Vue({data:...});

扩展构造器，Vue组件其实都是被扩展的Vue实例，var ext = Vue.extend({/*扩展选项*/});


Vue实例会代理其实例化参数data对象里的所有属性（实例化以后的不再代理）
	var d = {a:1}
	var vm = new Vue({data:d})
	vm.a = 2 // data.a -> 2
	data.a =3 // vm.a -> 3

除了代理data的属性，Vue实例本身还暴露一些固有的属性和方法，这些属性和方法有前缀$
	vm.$data 
	vm.$el
	vm.$watch('属性名',function(newVal, oldVal){})

生命周期和各种钩子（回调）
	created, compiled, ready, destroyed
	钩子中this指向Vue实例本身

数据绑定的最基本形式：文本插值，用Mustache语法（双花括号）
	<span>{{msg}}</span> 更新绑定
	<span>{{*msg}}</span> 单次插值
	<p>{{{raw_html}}}</p> 插入真HTML


绑定表达式：Mustache里面的就是绑定表达式
	是javascript表达式， i, msg, num+1, ok?'YES':'NO', str.split('-').join('.')，但不能是javascript语句

过滤器(V2.0开始已经废弃)
	{{message|capitalize}}，前者message是表达式，后者capitalize是一个内置过滤器（首字母大写）
	过滤器可以串联{{message|lowercase|capitalize}}——先全小写，再首字母大写
	过滤器可以带参数{{x|currency '￥' 1}}
	内置过滤器
		uppercase, lowercase：全部大写/小写
		currency：

